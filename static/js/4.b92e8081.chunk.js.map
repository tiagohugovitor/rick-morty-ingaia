{"version":3,"sources":["components/atoms/Modal/styles.js","components/atoms/Modal/index.jsx","components/atoms/Text/styles.js","components/atoms/Text/index.jsx","assets/loading-icon.svg","components/molecules/Loading/styles.js","components/molecules/Loading/index.jsx","components/atoms/Button/styles.js","components/atoms/Button/index.jsx","components/molecules/SheetImage/styles.js","components/molecules/SheetImage/index.jsx","components/molecules/CharacterCard/styles.js","components/molecules/CharacterCard/index.jsx","components/molecules/CharacterDescription/styles.js","components/molecules/CharacterDescription/index.jsx","assets/residents-icon.svg","components/molecules/LocationDescription/styles.js","components/molecules/LocationDescription/index.jsx","components/organisms/CharacterSheet/styles.js","components/organisms/CharacterSheet/index.jsx","components/templates/CharacterModal/index.jsx","components/atoms/Pagination/index.jsx","components/atoms/Input/styles.js","components/atoms/Input/index.jsx","components/molecules/SearchBar/styles.js","components/molecules/SearchBar/index.jsx","components/organisms/HomeHeader/styles.js","components/organisms/HomeHeader/index.jsx","components/organisms/CharactersList/styles.js","components/organisms/CharactersList/index.jsx","components/templates/HomeTemplate/styles.js","components/templates/HomeTemplate/index.jsx","services/characters.js","utils/descriptionCreator.js","pages/Home/index.jsx"],"names":["StyledDialogContent","styled","DialogContent","StyledDialog","Dialog","useStyles","makeStyles","theme","dialogPaper","borderRadius","Transition","forwardRef","props","ref","Slide","direction","displayName","withModal","WrappedComponent","classes","useState","open","setOpen","body","bodyProps","modalData","setModalData","handleClose","useCallback","handleShow","Body","dialogBody","closeModal","showModal","PaperProps","root","disableBackdropClick","keepMounted","maxWidth","onClose","TransitionComponent","StyledText","span","palette","text","color","typography","size","weight","fontWeight","Text","defaultProps","StyledLoading","div","Icon","img","Loading","src","LoadingIcon","StyledButton","button","white","main","fontSize","Button","label","id","name","disabled","onClick","StyledCard","Content","background","tertiary","border","primary","Image","Subtitle","StyledName","large","bold","StyledSpecie","SheetImage","image","type","CardContainer","selected","css","secondary","isMiniCard","CharacterCard","characterName","characterType","characterImage","onClickCard","isSelected","CharacterContainer","Title","CharacterDecription","title","characterDescription","LocationContainer","StyledLocationDescriptionDesktop","StyledLocationDescriptionMobile","ResidentsDecription","StyledResidentsIcon","LocationDescription","locationType","locationName","locationSubtitle","locationResidents","ResidentsIcon","SheetContainerDesktop","ImageBackground","ColorFilter","ImageContent","DescriptionBackground","black","StyledCloseIcon","StyledCharacterCard","SheetContainerMobile","CharacterSheet","originType","originName","originSubtitle","originResidents","CharacterModal","character","species","description","origin","dimension","residents","length","location","backgroundColor","Pagination","page","pages","onChangePage","className","count","onChange","StyledInput","input","Input","placeholder","value","event","target","SearchBarContent","SearchBarInput","SearchBarButton","SearchBar","Logo","StyledSearchBar","HeaderContent","HomeHeader","StyledList","CharactersList","characters","map","HomeContainer","loading","StyledHomeContent","StyledPagination","HomeTemplate","onClickSearch","searchResult","listCharacters","gql","descriptionCreator","Male","pronoum","Female","Dead","verb","status","Alive","searchCharacters","setSearchCharacters","pagination","setPagination","useLazyQuery","errorPolicy","runQuery","data","useEffect","newPages","info","state","onSearch","newPage","filter","variables","createDescription","gender","toLowerCase","episode","air_date","console","log","nemCharacter","results","ev"],"mappings":"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","file":"static/js/4.b92e8081.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {Dialog, DialogContent} from '@material-ui/core';\n\nconst StyledDialogContent = styled(DialogContent)`\n  padding: 0px !important;\n  border-radius: 16px;\n  @media(max-width: 800px) {\n    width: 80vw;\n  }\n`;\n\nconst StyledDialog = styled(Dialog)`\n  overflow-x: hidden !important;\n  border-radius: 16px;\n  @media(max-width: 800px) {\n    margin-top: 100px;\n  }\n`;\n\nexport {\n  StyledDialog,\n  StyledDialogContent,\n};\n","import React, {forwardRef, useCallback, useState} from 'react';\nimport Slide from '@material-ui/core/Slide';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {StyledDialog, StyledDialogContent} from './styles';\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    borderRadius: '16px',\n  },\n}));\n\nconst Transition = forwardRef((props, ref) => (\n  <Slide direction=\"up\" ref={ref} {...props} />\n));\n\nTransition.displayName = 'Transition';\n\nconst withModal = (WrappedComponent) => (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [modalData, setModalData] = useState({\n    body: null,\n    bodyProps: {},\n  });\n  const handleClose = useCallback(() => setOpen(false), []);\n  const handleShow = useCallback(({\n    body = null,\n    bodyProps = {},\n  }) => {\n    setModalData({\n      body,\n      bodyProps,\n    });\n    setOpen(true);\n  }, []);\n\n  const {\n    body: Body,\n    bodyProps,\n  } = modalData;\n\n  const dialogBody = modalData.body ? (\n    <StyledDialogContent>\n      <Body\n        closeModal={handleClose}\n        {...bodyProps}\n      />\n    </StyledDialogContent>\n  ) : (\n    <>\n    </>\n  );\n\n  return (\n    <>\n      <WrappedComponent\n        {...props}\n        closeModal={handleClose}\n        showModal={handleShow}\n      />\n      <StyledDialog\n        PaperProps={{classes: {root: classes.dialogPaper}}}\n        disableBackdropClick={false}\n        keepMounted\n        maxWidth='xl'\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        {dialogBody}\n      </StyledDialog>\n    </>\n  );\n};\n\nexport default withModal;\n","import styled from 'styled-components';\n\nconst StyledText = styled.span`\n  color: ${(props) => props.theme.palette.text[props.color]};\n  font-size: ${(props) => props.theme.typography.size[props.size]};\n  font-weight: ${(props) => props.theme.typography.weight[props.fontWeight]};\n`;\n\nexport {\n  StyledText,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StyledText} from './styles';\n\nconst Text = ({\n  text,\n  color,\n  size,\n  fontWeight,\n}) => {\n  return (\n    <StyledText\n      color={color}\n      size={size}\n      fontWeight={fontWeight}\n    >\n      {text}\n    </StyledText>\n  );\n};\n\nText.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.string,\n  fontWeight: PropTypes.string,\n};\n\nText.defaultProps = {\n  text: '',\n  color: 'white',\n  size: 'small',\n  fontWeight: 'normal',\n};\n\nexport default Text;\n","export default __webpack_public_path__ + \"static/media/loading-icon.fd752ea1.svg\";","import styled from 'styled-components';\n\nconst StyledLoading = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.5);\n  align-items: center;\n  z-index: 100;\n`;\n\nconst Icon = styled.img`\n  width: 184px;\n  height: 184px;\n  margin-bottom: 30px;\n`;\n\nexport {\n  StyledLoading,\n  Icon,\n};\n","import React from 'react';\nimport Text from '../../atoms/Text';\nimport LoadingIcon from '../../../assets/loading-icon.svg';\nimport {StyledLoading, Icon} from './styles';\n\nconst Loading = () => (\n  <StyledLoading>\n    <Icon src={LoadingIcon}/>\n    <Text\n      text=\"Loading\"\n      color=\"white\"\n      size=\"huge\"\n    />\n  </StyledLoading>\n);\n\nexport default Loading;\n","import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  border: 2px solid ${(props) => props.theme.palette.white.main};\n  box-sizing: border-box;\n  border-radius: 8px;\n  color: ${(props) => props.theme.palette.text.white};\n  align-items: center;\n  height: 100%;\n  background: transparent;\n  cursor: pointer;\n  font-weight: ${(props) => props.theme.typography.weight[props.fontWeight]};;\n  font-size: ${(props) => props.theme.typography.size[props.fontSize]};\n  line-height: 22px;\n  width: 100%;\n`;\n\nexport {\n  StyledButton,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StyledButton} from './styles';\n\nconst Button = ({\n  label,\n  id,\n  name,\n  disabled,\n  onClick,\n  fontSize,\n  fontWeight,\n}) => (\n  <StyledButton\n    id={id}\n    name={name}\n    disabled={disabled}\n    onClick={onClick}\n    fontSize={fontSize}\n    fontWeight={fontWeight}\n  >\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  fontSize: PropTypes.string,\n  fontWeight: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  label: '',\n  id: 'button-id',\n  name: 'button-name',\n  onClick: () => {},\n  fontSize: 'small',\n  fontWeight: 'normal',\n  disabled: false,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst StyledCard = styled.div`\n  position: fixed;\n  display: flex;\n  max-height: 70vh;\n  width: 22vw;\n  max-width: 400px;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  margin-left: -100px;\n  vertical-align: middle;\n  margin-top: 65px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  background: ${(props) => props.theme.palette.background.tertiary};\n  border: 2px solid ${(props) => props.theme.palette.border.primary};\n  box-sizing: border-box;\n  border-radius: 8px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.src});\n  background-size: cover;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border-radius: 8px 8px 0px 0px;\n  box-sizing: border-box;\n`;\n\nconst Subtitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0px 7px 13px; \n  height: 55px;\n`;\n\nconst StyledName = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  color: ${(props) => props.theme.palette.text.white};\n  font-size: ${(props) => props.theme.typography.size.large};\n  font-weight: ${(props) => props.theme.typography.weight.bold};\n  line-height: 25px;\n  text-overflow: ellipsis;\n`;\n\nconst StyledSpecie = styled.div`\n  line-height: 15px;\n`;\nexport {\n  StyledCard,\n  StyledSpecie,\n  StyledName,\n  Image,\n  Subtitle,\n  Content,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../../atoms/Text';\nimport {\n  StyledCard,\n  Image,\n  Subtitle,\n  Content,\n  StyledSpecie,\n  StyledName,\n} from './styles';\n\nconst SheetImage = ({\n  image,\n  name,\n  type,\n}) => {\n  return (\n    <StyledCard>\n      <Content>\n        <Image src={image} />\n        <Subtitle>\n          <StyledName>\n            <Text\n              text={name}\n              color=\"white\"\n              size=\"large\"\n              fontWeight=\"bold\"\n            />\n          </StyledName>\n          <StyledSpecie>\n            <Text\n              text={type}\n              color=\"white\"\n              size=\"mini\"\n              fontWeight=\"normal\"\n            />\n          </StyledSpecie>\n        </Subtitle>\n      </Content>\n    </StyledCard>\n  );\n};\n\nSheetImage.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default SheetImage;\n","import styled, {css} from 'styled-components';\n\nconst CardContainer = styled.div`\n  height: 224px;\n  width: 224px;\n  display: flex;\n  flex-direction: column;\n  background: ${(props) => props.theme.palette.background.tertiary};\n  border: 2px solid ${(props) => props.theme.palette.border.primary};\n  box-sizing: border-box;\n  border-radius: 8px;\n  cursor: pointer;\n\n${(props) => props.selected === 'true' && css`\n  border: 2px solid ${(props) => props.theme.palette.primary.main};;\n  box-sizing: border-box;\n  box-shadow: '0px 0px 0px 3px\n    ${(props) => props.theme.palette.primary.secondary};,\n    0px 0px 5px 4px ${(props) => props.theme.palette.primary.secondary};,\n    inset 0px 0px 0px 1px rgba(0, 0, 0, 0.6)\n  ';\n  border-radius: 8px;\n`}\n\n@media(max-width: 800px) {\n  width: 255px;\n  height: 223px;\n\n  ${(props) => props.isMiniCard === 'true' && css`\n    height: 173px;\n    width: 178px;\n  `}\n}\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 169px;\n  border-radius: 6px 6px 0px 0px;\n\n  @media(max-width: 800px) {\n  ${(props) => props.isMiniCard === 'true' && css`\n    height: 120px;\n  `}\n}\n`;\n\nconst StyledName = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  color: ${(props) => props.theme.palette.text.white};\n  font-size: ${(props) => props.theme.typography.size.large};\n  font-weight: ${(props) => props.theme.typography.weight.bold};\n  line-height: 25px;\n  text-overflow: ellipsis;\n`;\n\nconst StyledSpecie = styled.div`\n  line-height: 15px;\n`;\n\nconst Subtitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 13px;\n  height: 55px;\n  padding-top: 5px;\n`;\n\nexport {\n  CardContainer,\n  Image,\n  Subtitle,\n  StyledSpecie,\n  StyledName,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../../atoms/Text';\nimport {\n  CardContainer, Image, Subtitle, StyledName, StyledSpecie,\n} from './styles';\n\nconst CharacterCard = ({\n  characterName,\n  characterType,\n  characterImage,\n  onClickCard,\n  isSelected,\n  isMiniCard,\n}) => {\n  return (\n    <CardContainer\n      onClick={onClickCard}\n      selected={isSelected ? 'true' : 'false'}\n      isMiniCard={isMiniCard ? 'true' : 'false'}\n    >\n      <Image src={characterImage} isMiniCard={isMiniCard ? 'true' : 'false'} />\n      <Subtitle >\n        <StyledName>\n          <Text\n            text={characterName}\n            color=\"white\"\n            size=\"large\"\n            fontWeight=\"bold\"\n          />\n        </StyledName>\n        <StyledSpecie>\n          <Text\n            text={characterType}\n            color=\"white\"\n            size=\"mini\"\n            fontWeight=\"normal\"\n          />\n        </StyledSpecie>\n      </Subtitle>\n    </CardContainer>\n  );\n};\n\nCharacterCard.propTypes = {\n  characterName: PropTypes.string,\n  characterType: PropTypes.string,\n  characterImage: PropTypes.string,\n  onClickCard: PropTypes.func,\n  isSelected: PropTypes.bool,\n  isMiniCard: PropTypes.bool,\n};\n\nexport default CharacterCard;\n","import styled from 'styled-components';\n\nconst CharacterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.div`\n  line-height: 18px;\n  letter-spacing: 0.65em;\n`;\n\nconst Subtitle = styled.div`\n  padding-top: 8px;\n  line-height: 22px;\n`;\n\nexport {\n  CharacterContainer,\n  Title,\n  Subtitle,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../../atoms/Text';\nimport {CharacterContainer, Subtitle, Title} from './styles';\n\nconst CharacterDecription = ({\n  title,\n  characterDescription,\n}) => {\n  return (\n    <CharacterContainer>\n      <Title>\n        <Text\n          text={title}\n          color=\"tertiary\"\n          size=\"tiny\"\n          fontWeight=\"normal\"\n        />\n      </Title>\n      <Subtitle>\n        <Text\n          text={characterDescription}\n          color=\"grey\"\n          size=\"mediumSmall\"\n          fontWeight=\"normal\"\n        />\n      </Subtitle>\n    </CharacterContainer>\n  );\n};\n\nCharacterDecription.propTypes = {\n  title: PropTypes.string,\n  characterDescription: PropTypes.string,\n};\n\nexport default CharacterDecription;\n","export default __webpack_public_path__ + \"static/media/residents-icon.ab287e80.svg\";","import styled from 'styled-components';\n\nconst LocationContainer = styled.div`\n  margin-top: 60px;\n  display: flex;\n  flex-direction: column;  \n`;\n\nconst StyledLocationDescriptionDesktop = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 17px;\n\n  @media(max-width: 800px) {\n    display: none;\n  }\n`;\n\nconst StyledLocationDescriptionMobile = styled.div`\n  display: none;\n  flex-direction: column;\n  padding-top: 17px;\n\n  @media(max-width: 800px) {\n    display: flex;\n  }\n`;\n\nconst Title = styled.div`\n  letter-spacing: 0.65em;\n  line-height: 18px;\n`;\n\nconst ResidentsDecription = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 12px;\n`;\n\nconst StyledResidentsIcon = styled.img`\n  padding-right: 10px;\n`;\n\nexport {\n  LocationContainer,\n  StyledLocationDescriptionDesktop,\n  StyledLocationDescriptionMobile,\n  Title,\n  ResidentsDecription,\n  StyledResidentsIcon,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../../atoms/Text';\nimport ResidentsIcon from '../../../assets/residents-icon.svg';\nimport {\n  LocationContainer,\n  StyledLocationDescriptionDesktop,\n  StyledLocationDescriptionMobile,\n  Title,\n  ResidentsDecription,\n  StyledResidentsIcon,\n} from './styles';\n\nconst LocationDescription = ({\n  title,\n  locationType,\n  locationName,\n  locationSubtitle,\n  locationResidents,\n}) => {\n  return (\n    <LocationContainer>\n      <Title>\n        <Text\n          text={title}\n          color=\"tertiary\"\n          size=\"tiny\"\n          fontWeight=\"normal\"\n        />\n      </Title>\n      <StyledLocationDescriptionDesktop>\n        <Text\n          text={locationType}\n          color=\"secondary\"\n          size=\"small\"\n          fontWeight=\"normal\"\n        />\n        <Text\n          text={locationName}\n          color=\"white\"\n          size=\"extra\"\n          fontWeight=\"normal\"\n        />\n        <Text\n          text={locationSubtitle}\n          color=\"grey\"\n          size=\"medium\"\n          fontWeight=\"normal\"\n        />\n      </StyledLocationDescriptionDesktop>\n      <StyledLocationDescriptionMobile>\n        <Text\n          text={locationType}\n          color=\"secondary\"\n          size=\"mini\"\n          fontWeight=\"normal\"\n        />\n        <Text\n          text={locationName}\n          color=\"white\"\n          size=\"large\"\n          fontWeight=\"normal\"\n        />\n        <Text\n          text={locationSubtitle}\n          color=\"grey\"\n          size=\"mediumSmall\"\n          fontWeight=\"normal\"\n        />\n      </StyledLocationDescriptionMobile>\n      {!!locationResidents && (\n        <ResidentsDecription>\n          <StyledResidentsIcon src={ResidentsIcon} />\n          <Text\n            text={`${locationResidents} residents`}\n            color=\"secondary\"\n            size=\"small\"\n            fontWeight=\"normal\"\n          />\n        </ResidentsDecription>\n      )}\n    </LocationContainer>\n  );\n};\n\nLocationDescription.propTypes = {\n  title: PropTypes.string,\n  locationType: PropTypes.string,\n  locationName: PropTypes.string,\n  locationSubtitle: PropTypes.string,\n  locationResidents: PropTypes.number,\n};\n\nexport default LocationDescription;\n","import styled from 'styled-components';\n\nconst SheetContainerDesktop = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 90vh;\n  width: 65vw;\n  max-width: 1200px;\n  margin-left: -20px;\n  border-radius: 16px;\n\n  @media(max-width: 800px) {\n    display: none;\n  }\n`;\n\nconst ImageBackground = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  filter: blur(15px);\n  width: 100%;\n  height: 100%;\n  border-radius: 16px 0px 0px 16px;\n  \n  @media(max-width: 800px) {\n    bottom: 0px;\n    width: 100%;\n    height: 75%;\n    padding: 0px;\n    border-radius: 16px 16px 0px 0px;\n  }\n`;\n\nconst ColorFilter = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  border-radius: 16px 0px 0px 16px;\n\n  @media(max-width: 800px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0px;\n    border-radius: 16px 16px 0px 0px;\n  }\n`;\n\nconst ImageContent = styled.div`\n  position: relative;\n  width: 30%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 16px 0px 0px 16px;\n\n  @media(max-width: 800px) {\n    position: relative;\n    width: 100%;\n    height: 60px;\n    padding: 0px;\n    display: flex;\n    flex-direction: row;\n    border-radius: 16px 16px 0px 0px;\n  }\n`;\n\nconst DescriptionBackground = styled.div`\n  z-index: 100;\n  background-color: ${(props) => props.theme.palette.black.main};\n  padding: 70px 55px;\n  width: 60%;\n\n  @media(max-width: 800px) {\n    width: 60vw;\n    padding-left: 20px;\n    padding-top: 50px;\n  }\n`;\n\nconst Content = styled.div`\n  z-index: 100;\n  height: 100%;\n  width: 84px;\n  height: 42px;\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n\n  @media(max-width: 800px) {\n    position: fixed;\n    padding: 0px;\n    display: flex;\n    flex-direction: column;\n    margin-top: -120px;\n  }\n`;\n\nconst StyledCloseIcon = styled.div`\n  color: ${(props) => props.theme.palette.white.main};\n  cursor: pointer;\n`;\n\nconst StyledCharacterCard = styled.div`\n  width: 85vw;\n  top: 35px;\n  position: absolute;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst SheetContainerMobile = styled.div`\n  display: none;\n  width: 80vw;\n  height: 100%;\n  border-radius: 16px;\n  overflow-x: hidden !important;\n\n  @media(max-width: 800px) {\n    display: block;\n  }\n`;\n\nexport {\n  SheetContainerDesktop,\n  ImageBackground,\n  DescriptionBackground,\n  ImageContent,\n  Content,\n  ColorFilter,\n  SheetContainerMobile,\n  StyledCloseIcon,\n  StyledCharacterCard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '../../atoms/Button';\nimport SheetImage from '../../molecules/SheetImage';\nimport CharacterCard from '../../molecules/CharacterCard';\nimport CharacterDecription from '../../molecules/CharacterDescription';\nimport LocationDescription from '../../molecules/LocationDescription';\nimport {\n  SheetContainerDesktop,\n  StyledCharacterCard,\n  ImageBackground,\n  StyledCloseIcon,\n  DescriptionBackground,\n  ColorFilter,\n  ImageContent,\n  Content,\n  SheetContainerMobile,\n} from './styles';\n\nconst CharacterSheet = ({\n  onClose,\n  characterName,\n  characterType,\n  image,\n  characterDescription,\n  originType,\n  originName,\n  originSubtitle,\n  originResidents,\n  locationType,\n  locationName,\n  locationSubtitle,\n  locationResidents,\n}) => {\n  const renderSheetDesktop = () => (\n    <SheetContainerDesktop>\n      <ImageContent>\n        <ImageBackground\n          image={image}\n        />\n        <ColorFilter />\n        <Content>\n          <Button\n            label=\"Close\"\n            id=\"close-button\"\n            name=\"close-button\"\n            disabled={false}\n            onClick={onClose}\n            fontSize=\"mediumSmall\"\n            fontWeight=\"bold\"\n          />\n          <SheetImage\n            image={image}\n            name={characterName}\n            type={characterType}\n          />\n        </Content>\n      </ImageContent>\n      <DescriptionBackground>\n        <CharacterDecription\n          title=\"ABOUT\"\n          characterDescription={characterDescription}\n        />\n        <LocationDescription\n          title=\"ORIGIN\"\n          locationType={originType}\n          locationName={originName}\n          locationSubtitle={originSubtitle}\n          locationResidents={originResidents}\n        />\n        <LocationDescription\n          title=\"LOCATION\"\n          locationType={locationType}\n          locationName={locationName}\n          locationSubtitle={locationSubtitle}\n          locationResidents={locationResidents}\n        />\n      </DescriptionBackground>\n    </SheetContainerDesktop>\n  );\n\n  const renderSheetMobile = () => (\n    <SheetContainerMobile>\n      <ImageContent>\n        <ImageBackground\n          image={image}\n        />\n        <ColorFilter />\n        <Content>\n          <StyledCloseIcon onClick={onClose}>\n            <CloseIcon fontSize=\"large\" />\n          </StyledCloseIcon>\n          <StyledCharacterCard>\n            <CharacterCard\n              characterName={characterName}\n              characterType={characterType}\n              characterImage={image}\n              isMiniCard={true}\n              onClickCard={() => { }}\n              isSelected={false}\n            />\n          </StyledCharacterCard>\n        </Content>\n      </ImageContent>\n      <DescriptionBackground>\n        <CharacterDecription\n          title=\"ABOUT\"\n          characterDescription={characterDescription}\n        />\n        <LocationDescription\n          title=\"ORIGIN\"\n          locationType={originType}\n          locationName={originName}\n          locationSubtitle={originSubtitle}\n          locationResidents={originResidents}\n        />\n        <LocationDescription\n          title=\"LOCATION\"\n          locationType={locationType}\n          locationName={locationName}\n          locationSubtitle={locationSubtitle}\n          locationResidents={locationResidents}\n        />\n      </DescriptionBackground>\n    </SheetContainerMobile>\n  );\n\n  return (\n    <>\n      {renderSheetDesktop()}\n      {renderSheetMobile()}\n    </>\n  );\n};\n\nCharacterSheet.propTypes = {\n  onClose: PropTypes.func,\n  characterName: PropTypes.string,\n  characterType: PropTypes.string,\n  image: PropTypes.string,\n  characterDescription: PropTypes.string,\n  originType: PropTypes.string,\n  originName: PropTypes.string,\n  originSubtitle: PropTypes.string,\n  originResidents: PropTypes.number,\n  locationType: PropTypes.string,\n  locationName: PropTypes.string,\n  locationSubtitle: PropTypes.string,\n  locationResidents: PropTypes.string,\n};\n\nexport default CharacterSheet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterSheet from '../../organisms/CharacterSheet';\n\nconst CharacterModal = ({\n  closeModal,\n  character,\n}) => {\n  return (\n    <CharacterSheet\n      onClose={closeModal}\n      characterName={character?.name}\n      characterType={character?.species}\n      image={character?.image}\n      characterDescription={character?.description}\n      originType={character?.origin?.type || 'Unknown Planet'}\n      originName={character?.origin?.name || 'Unknown'}\n      originSubtitle={character?.origin?.dimension || 'Unknown dimension'}\n      originResidents={character?.origin?.residents?.length}\n      locationType={character?.location?.type || 'Unknown Planet'}\n      locationName={character?.location?.name || 'Unknown'}\n      locationSubtitle={character?.location?.dimension || 'Unknown dimension'}\n      locationResidents={character?.location?.residents?.length}\n    />\n  );\n};\n\nCharacterModal.propTypes = {\n  closeModal: PropTypes.func,\n  character: PropTypes.object,\n};\n\nexport default CharacterModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport MaterialPagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .Mui-selected': {\n      backgroundColor: 'transparent',\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst Pagination = ({\n  page,\n  pages,\n  onChangePage,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <MaterialPagination\n      color=\"primary\"\n      className={classes.root}\n      count={pages}\n      onChange={onChangePage}\n      page={page}\n    />\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number,\n  pages: PropTypes.number,\n  onChangePage: PropTypes.func,\n};\n\nPagination.defaultProps = {\n  page: 1,\n  pages: 1,\n  onChangePage: () => {},\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  border: 2px solid ${(props) => props.theme.palette.white.main};\n  box-sizing: border-box;\n  border-radius: 8px;\n  color: ${(props) => props.theme.palette.text.primary};\n  padding: 10px 14px;\n  background: transparent;\n  font-style: normal;\n  font-weight: ${(props) => props.theme.typography.weight[props.fontWeight]};\n  font-size: ${(props) => props.theme.typography.size[props.fontSize]};\n  line-height: 22px;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport {\n  StyledInput,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StyledInput} from './styles';\n\nconst Input = ({\n  id,\n  type,\n  name,\n  placeholder,\n  onChange,\n  value,\n  fontSize,\n  fontWeight,\n}) => (\n  <StyledInput\n    id={id}\n    type={type}\n    name={name}\n    onChange={(event) => onChange(event.target.value)}\n    value={value}\n    fontSize={fontSize}\n    fontWeight={fontWeight}\n    placeholder={placeholder}\n  />\n);\n\nInput.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  fontSize: PropTypes.string,\n  fontWeight: PropTypes.string,\n};\n\nInput.defaultProps = {\n  id: 'input-id',\n  type: 'text',\n  name: 'input-name',\n  placeholder: '',\n  onChange: () => {},\n  value: '',\n  fontSize: 'small',\n  fontWeight: 'normal',\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst SearchBarContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 350px;\n`;\n\nconst SearchBarInput = styled.div`\n  margin: 0px 8px;\n  max-width: 245px;\n  min-width: 164px;\n  width: 45vw;\n\n  @media(max-width: 800px) {\n    margin: 0px 4px;\n  }\n`;\n\nconst SearchBarButton = styled.div`\n  margin: 0px 8px;\n  max-width: 92px;\n  min-width: 84px;\n  width: 20vw;\n\n  @media(max-width: 800px) {\n    margin: 0px 4px;\n  }\n`;\n\nexport {\n  SearchBarContent,\n  SearchBarInput,\n  SearchBarButton,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../../atoms/Input';\nimport Button from '../../atoms/Button';\nimport {SearchBarContent, SearchBarInput, SearchBarButton} from './styles';\n\nconst SearchBar = ({\n  onChange,\n  onClick,\n  value,\n}) => {\n  return (\n    <SearchBarContent>\n      <SearchBarInput>\n        <Input\n          id=\"search-bar-input\"\n          type=\"text\"\n          name=\"search-characters-input\"\n          placeholder=\"Search characters\"\n          onChange={onChange}\n          value={value}\n          fontSize=\"mediumSmall\"\n          fontWeight=\"bold\"\n        />\n      </SearchBarInput>\n      <SearchBarButton>\n        <Button\n          label=\"Search\"\n          id=\"search-bar-button\"\n          name=\"search-characters-button\"\n          disabled={false}\n          onClick={onClick}\n          fontSize=\"mediumSmall\"\n          fontWeight=\"bold\"\n        />\n      </SearchBarButton>\n    </SearchBarContent>\n  );\n};\n\nSearchBar.propTypes = {\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nconst Logo = styled.img`\n  height: auto;\n  max-width: 502px;\n  width: 70vw;\n`;\n\nconst StyledSearchBar = styled.div`\n  padding-top: 75px;\n\n  @media(max-width: 800px) {\n    padding-top: 50px;\n  }\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport {\n  Logo,\n  StyledSearchBar,\n  HeaderContent,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from '../../molecules/SearchBar';\nimport {Logo, StyledSearchBar, HeaderContent} from './styles';\n\nconst HomeHeader = ({\n  onChange,\n  onClick,\n  value,\n}) => {\n  return (\n    <HeaderContent>\n      <Logo src=\"../../../../assets/logo.svg\"/>\n      <StyledSearchBar>\n        <SearchBar\n          onChange={onChange}\n          onClick={onClick}\n          value={value}\n        />\n      </StyledSearchBar>\n    </HeaderContent>\n  );\n};\n\nHomeHeader.propTypes = {\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default HomeHeader;\n","import styled from 'styled-components';\n\nconst StyledList = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 1100px;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  justify-content: center;\n`;\n\nconst StyledCharacterCard = styled.div`\n  margin: 24px;\n\n  @media(max-width: 800px) {\n    margin: 12px;\n  }\n`;\n\nexport {\n  StyledList,\n  StyledCharacterCard,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../../molecules/CharacterCard';\nimport {StyledList, StyledCharacterCard} from './styles';\n\nconst CharactersList = ({\n  characters,\n  onClickCard,\n}) => {\n  return (\n    <StyledList>\n      {characters.map((character) => (\n        <StyledCharacterCard\n          key={character.id}\n        >\n          <CharacterCard\n            onClickCard={() => onClickCard(character)}\n            characterName={character?.name}\n            characterType={character?.species}\n            characterImage={character?.image}\n            isSelected={false}\n          />\n        </StyledCharacterCard>\n      ))}\n    </StyledList>\n  );\n};\n\nCharactersList.propTypes = {\n  characters: PropTypes.array,\n  onClickCard: PropTypes.func,\n};\n\nexport default CharactersList;\n","import styled from 'styled-components';\n\nconst HomeContainer = styled.div`\n  background-image: url(\"../../../../assets/home-background.svg\");\n  background-repeat: no-repeat;\n  background-size: 100%;\n  height: auto;\n  min-height: 100vh;\n  width: 100%;\n  filter: ${(props) => props.loading === 'true' ? 'blur(15px)' : 'none'};\n\n  @media(max-width: 800px) {\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n  }\n`;\n\nconst StyledHomeContent = styled.div`\n  margin-top: 100px;\n\n  @media(max-width: 800px) {\n    margin-top: 50px;\n  }\n`;\n\nconst StyledPagination = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: 100px;\n  margin-bottom: 200px;\n\n  @media(max-width: 800px) {\n    margin-top: 40px;\n    padding-bottom: 60px;\n  }\n`;\n\nexport {\n  HomeContainer,\n  StyledHomeContent,\n  StyledPagination,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from '../../atoms/Pagination';\nimport HomeHeader from '../../organisms/HomeHeader';\nimport CharactersList from '../../organisms/CharactersList';\nimport {HomeContainer, StyledHomeContent, StyledPagination} from './styles';\n\nconst HomeTemplate = ({\n  onChange,\n  onClickSearch,\n  value,\n  searchResult,\n  onClickCard,\n  loading,\n  page,\n  pages,\n  onChangePage,\n}) => {\n  const hasContent = () => !!searchResult?.length;\n\n  return (\n    <HomeContainer\n      loading={loading ? 'true' : 'false'}\n    >\n      <HomeHeader\n        onChange={onChange}\n        onClick={onClickSearch}\n        value={value}\n      />\n      <StyledHomeContent>\n        {hasContent() && (\n          <>\n            <CharactersList\n              onClickCard={onClickCard}\n              characters={searchResult}\n            />\n            <StyledPagination>\n              <Pagination\n                page={page}\n                pages={pages}\n                onChangePage={onChangePage}\n              />\n            </StyledPagination>\n          </>\n        )}\n      </StyledHomeContent>\n    </HomeContainer>\n  );\n};\n\nHomeTemplate.propTypes = {\n  onChange: PropTypes.func,\n  onClickSearch: PropTypes.func,\n  value: PropTypes.string,\n  searchResult: PropTypes.array,\n  onClickCard: PropTypes.func,\n  loading: PropTypes.bool,\n  page: PropTypes.number,\n  pages: PropTypes.number,\n  onChangePage: PropTypes.func,\n};\n\nexport default HomeTemplate;\n","import {gql} from '@apollo/client';\n\nconst listCharacters = gql`\n  query Characters($page: Int, $filter: FilterCharacter) {\n    characters(page: $page, filter: $filter) {\n      info {\n        count\n        pages\n      }\n      results {\n        id\n        name\n        status\n        species\n        gender\n        type\n        created\n        episode {\n          air_date\n        }\n        origin {\n          name \n          type\n          dimension\n          residents {\n            id\n          }\n        }\n        location {\n          name \n          type\n          dimension\n          residents {\n            id\n          }\n        }\n        image\n      }\n    }\n  }\n`;\n\nexport {\n  listCharacters,\n};\n","const descriptionCreator = {\n  Male: {\n    pronoum: 'He',\n  },\n  Female: {\n    pronoum: 'She',\n  },\n  Dead: {\n    verb: 'was',\n    status: 'is dead',\n  },\n  Alive: {\n    verb: 'is',\n    status: 'is alive and well',\n  },\n};\n\nexport {\n  descriptionCreator,\n};\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {useLazyQuery} from '@apollo/react-hooks';\nimport withModal from '../../components/atoms/Modal';\nimport Loading from '../../components/molecules/Loading';\nimport CharacterModal from '../../components/templates/CharacterModal';\nimport HomeTemplate from '../../components/templates/HomeTemplate';\nimport {listCharacters} from '../../services/characters.js';\nimport {descriptionCreator} from '../../utils/descriptionCreator.js';\n\nconst Home = ({\n  showModal,\n}) => {\n  const [searchCharacters, setSearchCharacters] = useState('');\n  const [pagination, setPagination] = useState({\n    page: 1,\n    pages: 0,\n  });\n  const [runQuery, {data, loading}] = useLazyQuery(\n      listCharacters,\n      {errorPolicy: 'all'},\n  );\n\n  useEffect(() => {\n    const newPages = data?.characters?.info.pages;\n    if (newPages !== pagination.pages) {\n      setPagination((state) => ({...state, pages: newPages}));\n    }\n  }, [data, pagination.pages]);\n\n  const onSearch = (newPage, filter) => {\n    setPagination((state) => ({...state, page: newPage}));\n    runQuery({\n      variables: {page: newPage, filter: {name: filter}},\n    });\n  };\n\n  const createDescription = (character) => {\n    const description = `${character.name}\n     ${descriptionCreator[character.status]?.verb}\n     a ${character?.gender.toLowerCase()} ${character?.species.toLowerCase()}.\n     ${descriptionCreator[character.gender]?.pronoum}\n     ${descriptionCreator[character.status]?.status}.\n     Last seen in\n     ${character?.episode[character?.episode.length - 1]?.air_date}.`;\n    console.log(description);\n    return description;\n  };\n\n  const openCharacterSheetModal = (character) => {\n    const nemCharacter = {\n      ...character,\n      description: createDescription(character),\n    };\n    showModal({\n      body: CharacterModal,\n      bodyProps: {\n        character: nemCharacter,\n      },\n    });\n  };\n\n  const onChangePage = (ev, newPage) => {\n    onSearch(newPage, searchCharacters);\n  };\n\n  return (\n    <>\n      {loading && <Loading />}\n      <HomeTemplate\n        loading={loading}\n        onChange={setSearchCharacters}\n        onClickSearch={() => onSearch(1, searchCharacters)}\n        onClickCard={openCharacterSheetModal}\n        value={searchCharacters}\n        searchResult={data?.characters?.results || []}\n        page={pagination.page}\n        pages={pagination.pages}\n        onChangePage={onChangePage}\n      />\n    </>\n  );\n};\n\nHome.propTypes = {\n  showModal: PropTypes.func,\n};\n\nexport default (withModal(Home));\n"],"sourceRoot":""}